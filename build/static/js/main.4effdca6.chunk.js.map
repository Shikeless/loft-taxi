{"version":3,"sources":["modules/Auth/actions.js","modules/Auth/auth.js","modules/Auth/api.js","modules/Auth/sagas.js","localStorage.js","modules/Profile/actions.js","modules/Profile/profile.js","modules/Profile/sagas.js","modules/Order/actions.js","modules/Order/api.js","modules/Order/order.js","modules/Order/sagas.js","modules/index.js","store.js","components/PrivateRouter/PrivateRouter.js","components/LoginForm/LoginForm.js","components/MapModal/MapModal.js","components/MapBox/MapBox.js","modules/Order/ApiKey.js","components/Header/Header.js","components/Profile/Profile.js","index.js","components/RootRouter/RootRouter.js","components/MapModal/MapModal.module.css","components/Header/Header.module.css","components/LoginForm/LoginForm.module.css","components/Profile/Profile.module.css"],"names":["authRequest","createAction","authSuccess","authFailure","logoutRequest","isAuthorized","handleActions","error","_state","action","payload","combineReducers","getIsAuthorized","state","auth","getError","authUser","email","password","fetch","then","response","status","Promise","reject","json","fetchAuthWatcher","fetchAuthFlow","takeLatest","call","result","success","put","console","log","save","localStorageKey","data","window","localStorage","setItem","JSON","stringify","profileSave","profile","stringData","getItem","parse","e","load","getProfile","profileFlow","profileWatcher","takeEvery","fork","map","mapRequest","mapFailure","addressListRequest","addressListSuccess","addressListFailure","routeRequest","routeSuccess","routeFailure","newOrderRequest","addressList","addresses","route","order","getAddressList","getOrder","mapInit","mapContainer","apiKey","mapboxgl","accessToken","Map","container","current","style","center","zoom","fetchAddressList","fetchRoute","from","to","drawRoute","getLayer","getSource","setData","type","features","properties","geometry","coordinates","addLayer","id","source","layout","paint","flyTo","point","bearing","speed","curve","fetchMapWatcher","fetchMapFlow","fetchAddressListFlow","fetchRouteFlow","fetchRouteSuccessFlow","Error","message","rootSaga","form","formReducer","authSagas","profileSagas","orderSagas","createAppStore","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","f","run","PrivateRouter","renderRoute","routeProps","props","RouteComponent","component","this","rest","render","Component","connect","fields","label","LoginForm","values","handleChange","event","setState","target","name","value","handleSubmit","authError","className","styles","root","Alert","color","Form","Fragment","key","FormGroup","Label","for","Input","onChange","Button","onClick","formElement","React","MapDispatchToProps","FormTaxiRequest","selectedIndex","item","index","FormNewOrder","onSubmit","data-testid","MapForm","withRouter","MapBox","createRef","position","height","width","ref","MapModal","PureComponent","Header","handleClick","preventDefault","toggle","bind","isOpen","Navbar","light","expand","NavbarBrand","NavbarToggler","Collapse","navbar","Nav","NavItem","navLink","Profile","validations","isInvalid","isValid","card","date","cvv","history","push","verifyName","match","prevState","verifyCard","v","verifyDate","substring","verifyCVV","defaultValue","placeholder","onKeyUp","invalid","valid","FormFeedback","Row","Col","md","ReactDOM","exact","path","document","getElementById","module","exports"],"mappings":"4OAEaA,EAAcC,YAAa,gBAC3BC,EAAcD,YAAa,gBAC3BE,EAAcF,YAAa,gBAE3BG,EAAgBH,YAAa,eCGpCI,EAAeC,aAAa,mBAEzBN,GAAc,kBAAM,KAFK,cAGzBE,GAAc,kBAAM,KAHK,cAIzBC,GAAc,kBAAM,KAJK,cAKzBC,GAAgB,kBAAM,KALG,IAO9B,GAGEG,EAAQD,aAAa,mBAElBN,GAAc,kBAAM,QAFF,cAGlBE,GAAc,kBAAM,QAHF,cAIlBC,GAAc,SAACK,EAAQC,GAAT,OAAoBA,EAAOC,WAJvB,GAMvB,MAGWC,cAAgB,CAAEN,eAAcE,UAElCK,EAAkB,SAAAC,GAAK,OAAIA,EAAMC,KAAKT,cACtCU,EAAW,SAAAF,GAAK,OAAIA,EAAMC,KAAKP,OC/B/BS,EAAW,SAACC,EAAOC,GAAR,OACpBC,MAAM,6CAAD,OAC4CF,EAD5C,qBAC8DC,IACjEE,MAAK,SAAAC,GACH,OAA2B,MAApBA,EAASC,OACVC,QAAQC,OAAOH,GACfA,EAASI,W,WCFbC,G,WAIOC,GAJjB,SAAUD,EAAiBjB,GAA3B,iEACI,OADJ,SACUmB,YAAW5B,EAAa2B,GADlC,uCAIO,SAAUA,EAAclB,GAAxB,6EAGgB,OAHhB,EACyBA,EAAOC,QAA3BO,EADL,EACKA,MAAOC,EADZ,EACYA,SADZ,kBAGsBW,YAAKb,EAAUC,EAAOC,GAH5C,YAGOY,EAHP,QAIYC,QAJZ,iBAKK,OALL,SAKWC,YAAI9B,KALf,+BAOK,OAPL,UAOW8B,YAAI7B,EAAY2B,EAAOvB,QAPlC,0DAUC0B,QAAQC,IAAR,MAVD,sDAcQR,QCXFS,EAAO,SAACC,EAAiBC,GAClCC,OAAOC,aAAaC,QAAQJ,EAAiBK,KAAKC,UAAUL,KCVnDM,EAAc1C,YAAa,gB,8NCExC,IAae2C,EAbCtC,YAAc,eAErBqC,GAAc,SAACnC,EAAQC,GACpB,OAAKA,EAAOC,Q,yVACL,CAAP,GACOF,EADP,GAEOC,EAAOC,SAHc,QFPpB,SAAA0B,GAChB,IAAMS,EAAaP,OAAOC,aAAaO,QAAQV,GAC3CC,EAAO,KACX,IACIA,EAAOI,KAAKM,MAAMF,GACpB,MAAOG,GACLX,EAAO,KAEX,OAAOA,EEMPY,CAAK,YAKIC,EAAa,SAAArC,GAAK,OAAIA,EAAM+B,S,WCfxBO,G,WAQPC,G,cARH,SAAUD,EAAY1C,GAAtB,iEAEC,OAFD,kBAEOoB,YAAKM,EAAM,UAAW1B,EAAOC,SAFpC,sDAICuB,QAAQC,IAAR,MAJD,oDAQP,SAAUkB,IAAV,iEACI,OADJ,SACUC,YAAUV,EAAaQ,GADjC,uCAIe,8EACX,OADW,SACLG,YAAKF,GADA,uCCdR,I,ICFHG,EDESC,EAAavD,YAAa,eAE1BwD,GADaxD,YAAa,eACbA,YAAa,gBAE1ByD,EAAqBzD,YAAa,wBAClC0D,EAAqB1D,YAAa,wBAClC2D,EAAqB3D,YAAa,wBAElC4D,EAAe5D,YAAa,iBAC5B6D,EAAe7D,YAAa,iBAC5B8D,EAAe9D,YAAa,iBAE5B+D,GAAkB/D,YAAa,qBEJtCgE,IFKyBhE,YAAa,qBACbA,YAAa,qBENxBK,YAAc,eAEzBqD,GAAqB,SAAC9C,EAAOJ,GAAR,OAAmBA,EAAOC,QAAQwD,aAE5D,OAGEC,GAAQ7D,aAAa,iBAAC,EAEnBuD,GAAe,SAAAhD,GAAK,OAAI,QAFN,YAAC,EAGnBiD,GAAe,SAACjD,EAAOJ,GAAR,OAAmBA,EAAOC,WAHvB,YAAC,EAInBqD,GAAe,SAAAlD,GAAK,OAAI,QAJN,YAAC,EAKnBmD,IAAkB,SAAAnD,GAAK,OAAI,QALT,GAOvB,MAGEuD,GAAQ9D,aAAa,mBAElBuD,GAAe,SAAAhD,GAAK,OAAI,KAFN,cAGlBiD,GAAe,SAAAjD,GAAK,OAAI,KAHN,cAIlBkD,GAAe,SAAAlD,GAAK,OAAI,KAJN,cAKlBmD,IAAkB,SAAAnD,GAAK,OAAI,KALT,IAOvB,GAGSwD,GAAiB,SAAAxD,GAAK,OAAIA,EAAMuD,MAAMH,aAEtCK,GAAW,SAAAzD,GAAK,OAAIA,EAAMuD,MAAMA,OAE9BzD,eAAgB,CAC3BsD,eACAE,SACAC,WDzCSG,GAAU,SAACC,EAAcC,EAAQC,GAQ1C,OAPAA,EAASC,YAAcF,EACvBlB,EAAM,IAAImB,EAASE,IAAI,CACnBC,UAAWL,EAAaM,QACxBC,MAAO,qCACPC,OAAQ,CAAC,MAAO,OAChBC,KAAM,QAKDC,GAAmB,WAC5B,OAAO/D,MAAM,2CAA2CC,MAAK,SAAAC,GACzD,OAA2B,MAApBA,EAASC,OACVC,QAAQC,OAAOH,GACfA,EAASI,WAIV0D,GAAa,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,KAAMC,EAAS,EAATA,GAC/B,OAAOlE,MAAM,8CAAD,OACsCiE,EADtC,qBACuDC,IACjEjE,MAAK,SAAAC,GACH,OAA2B,MAApBA,EAASC,OACVC,QAAQC,OAAOH,GACfA,EAASI,WAIV6D,GAAY,SAAAnB,GACjBZ,EAAIgC,SAhCI,SAiCRhC,EAAIiC,UAjCI,SAiCeC,QAAQ,CAC3BC,KAAM,oBACNC,SAAU,CACN,CACID,KAAM,UACNE,WAAY,GACZC,SAAU,CACNH,KAAM,aACNI,YAAa3B,OAQjCZ,EAAIwC,SAAS,CACTC,GAlDQ,QAmDRN,KAAM,OACNO,OAAQ,CACJP,KAAM,UACNrD,KAAM,CACFqD,KAAM,UACNE,WAAY,GACZC,SAAU,CACNH,KAAM,aACNI,YAAa3B,KAIzB+B,OAAQ,CACJ,YAAa,QACb,WAAY,SAEhBC,MAAO,CACH,aAAc,MACd,aAAc,MAKbC,GAAQ,SAAAC,GACjB9C,EAAI6C,MAAM,CACNpB,OAAQqB,EACRpB,KAAM,GACNqB,QAAS,EACTC,MAAO,GACPC,MAAO,K,YEpELC,I,YAOOC,I,YAYAC,I,YASAC,I,YAeAC,IA3CjB,SAAUJ,GAAgBhG,GAA1B,iEACI,OADJ,SACUmB,YAAW4B,EAAYkD,IADjC,OAEI,OAFJ,SAEU9E,YAAW8B,EAAoBiD,IAFzC,OAGI,OAHJ,SAGU/E,YAAWiC,EAAc+C,IAHnC,OAII,OAJJ,SAIUhF,YAAWkC,EAAc+C,IAJnC,wCAOO,SAAUH,GAAajG,GAAvB,0EACG8C,EAAM9C,EAAOC,QADhB,UAIK6C,EAJL,gBAKK,OALL,SAKWvB,YAAI0B,KALf,mCAMc,IAAIoD,MAAMvD,EAAIhD,OAN5B,+BAQC,OARD,oCAQOyB,YAAIyB,EAAW,KAAMsD,UAR5B,uDAYA,SAAUJ,GAAqBlG,GAA/B,uEAEmB,OAFnB,kBAEyBoB,YAAKqD,IAF9B,YAEOhB,EAFP,wBAGgB,OAHhB,SAGsBlC,YAAI2B,EAAmBO,IAH7C,8BAKC,OALD,mCAKOlC,YAAI4B,EAAmB,KAAMmD,UALpC,sDASA,SAAUH,GAAenG,GAAzB,uFAEOyD,EAAYzD,EAAOC,SAF1B,gBAIiB,OAJjB,SAIuBmB,YAAKsD,GAAYjB,GAJxC,OAISC,EAJT,kBAMKA,EANL,iBAOK,OAPL,SAOWnC,YAAI8B,EAAaK,IAP5B,OAQK,OARL,UAQWtC,YAAKyD,GAAWnB,GAR3B,gCAWC,OAXD,oCAWOnC,YAAI+B,EAAa,KAAMgD,UAX9B,uDAeA,SAAUF,GAAsBpG,GAAhC,iEAEC,OAFD,kBAEOoB,YAAKuE,GAAO3F,EAAOC,QAAQ,IAFlC,sHAQQ+F,U,sBCvDEO,IAFFrG,eAAgB,CAAEG,OAAM8B,UAASwB,SAAO6C,KAAMC,OAEtD,SAAUF,KAAV,iEACH,OADG,SACG1D,YAAK6D,GADR,OAEH,OAFG,SAEG7D,YAAK8D,GAFR,OAGH,OAHG,SAGG9D,YAAK+D,IAHR,wCCLP,IAiBeC,GAjBQ,WACnB,IAAMC,EAAiBC,cAEjBC,EAAQC,YACVC,GACAC,YACIC,YAAgBN,GAChBjF,OAAOwF,6BACDxF,OAAOwF,+BACP,SAAAC,GAAC,OAAIA,KAKnB,OADAR,EAAeS,IAAIhB,IACZS,G,iFCbLQ,G,8MACFC,YAAc,SAAAC,GAAe,IAAD,EAC4B,EAAKC,MAAjD/H,EADgB,EAChBA,aAAyBgI,EADT,EACFC,UACtB,OAAwB,IAAjBjI,EACH,kBAACgI,EAAmBF,GAEpB,kBAAC,KAAD,CAAU9C,GAAG,O,0EAIX,IAAD,EAC0BkD,KAAKH,MAAdI,GADjB,EACGF,UADH,+BAEL,OAAO,kBAAC,KAAD,iBAAWE,EAAX,CAAiBC,OAAQF,KAAKL,mB,GAZjBQ,aAgBbC,iBACX,SAAA9H,GAAK,MAAK,CAAER,aAAcO,EAAgBC,MAC1C,KAFW8H,CAGbV,I,mpBChBF,IAKMW,GAAS,CACX,CACI5C,GAAI,QACJ6C,MAAO,iCACPnD,KAAM,QAEV,CACIM,GAAI,WACJ6C,MAAO,uCACPnD,KAAM,aAIRoD,G,8MACFjI,MAAQ,CACJkI,OAAQ,CACJ9H,MAAO,GACPC,SAAU,K,EAIlB8H,aAAe,SAAAC,GAAU,IACbF,EAAW,EAAKlI,MAAhBkI,OACR,EAAKG,SAAS,CACVH,OAAO,MAAMA,EAAP,eAAgBE,EAAME,OAAOC,KAAOH,EAAME,OAAOE,W,EAI/DC,aAAe,WAAO,IAAD,EAGb,EAAKzI,MADLkI,OAAU9H,EAFG,EAEHA,MAAOC,EAFJ,EAEIA,UAGrBlB,EADwB,EAAKoI,MAArBpI,aACI,CAAEiB,QAAOC,c,0EAGf,IAAD,SAC+BqH,KAAKH,MAAjC/H,EADH,EACGA,aAAckJ,EADjB,EACiBA,UACdR,EAAWR,KAAK1H,MAAhBkI,OACR,OAAI1I,EAAqB,kBAAC,KAAD,CAAUgF,GAAG,YAElC,yBAAKmE,UAAWC,KAAOC,MACJ,OAAdH,GACG,kBAACI,GAAA,EAAD,CAAOC,MAAM,UAAUL,GAE3B,kBAACM,GAAA,EAAD,KACKjB,GAAOrF,KAAI,gBAAGyC,EAAH,EAAGA,GAAI6C,EAAP,EAAOA,MAAOnD,EAAd,EAAcA,KAAd,OACR,kBAAC,IAAMoE,SAAP,CAAgBC,IAAK/D,GACjB,kBAACgE,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAOC,IAAKlE,GAAK6C,GACjB,kBAACsB,GAAA,EAAD,CACInE,GAAIA,EACJN,KAAMA,EACN0D,KAAMpD,EACNqD,MAAON,EAAO/C,GACdoE,SAAU,EAAKpB,oBAK/B,kBAACqB,GAAA,EAAD,CACIC,QAAS/B,KAAKe,aACdE,UAAWC,KAAOc,aAFtB,WAOJ,mC,GAtDQC,IAAM9B,WA4DfC,iBA9ES,SAAA9H,GAAK,MAAK,CAC9BR,aAAcO,EAAgBC,GAC9B0I,UAAWxI,EAASF,MA8EpB,CAAEb,eAFS2I,CAGbG,I,8mBC5EF,IAKM2B,GAAqB,CAAEpG,kBAAgBR,eAAcG,oBAErD0G,G,8MACF7J,MAAQ,CACJkI,OAAQ,CACJ3D,KAAM,GACNC,GAAI,K,EAIZ2D,aAAe,SAAAC,GAAU,IACbF,EAAW,EAAKlI,MAAhBkI,OACR,EAAKG,SAAS,CACVH,OAAO,MACAA,EADD,eAEDE,EAAME,OAAOC,KAAO,EAAKhB,MAAMnE,YAC5BgF,EAAME,OAAOwB,oB,0EAMnB,IAAD,SAEiCpC,KAAKH,MAAnCnE,EAFH,EAEGA,YAAaJ,EAFhB,EAEgBA,aACbkF,EAAWR,KAAK1H,MAAhBkI,OAER,OACI,6BACI,kBAACc,GAAA,EAAD,KANO,CAAC,OAAQ,MAOJtG,KAAI,SAAAyC,GAAE,OACV,kBAAC,IAAM8D,SAAP,CAAgBC,IAAK/D,GACjB,kBAACgE,GAAA,EAAD,KACI,kBAACG,GAAA,EAAD,CACIG,QAAS,EAAKtB,aACdtD,KAAK,SACL0D,KAAMpD,GAEL/B,GACGA,EAAYV,KAAI,SAACqH,EAAMC,GAAP,OACZ,kBAAC,IAAMf,SAAP,CAAgBC,IAAKc,GACjB,gCAASD,cAQzC,kBAACP,GAAA,EAAD,CACIC,QAAS,WACLzG,EAAakF,IAEjBS,UAAWC,KAAOc,aAJtB,kF,GA/CcC,IAAM9B,WA4DpC,SAASoC,GAAa1C,GAAQ,IAClB2C,EAAa3C,EAAb2C,SACR,OACI,yBAAKC,cAAY,gBACb,+GACA,qWAIA,kBAACX,GAAA,EAAD,CAAQC,QAASS,EAAUvB,UAAWC,KAAOc,aAA7C,6GAOL,IAAMU,GAAb,sLACc,IAAD,EAMD1C,KAAKH,MAJLhE,EAFC,EAEDA,MACAH,EAHC,EAGDA,YACAJ,EAJC,EAIDA,aACAG,EALC,EAKDA,gBAEJ,OACI,yBAAKwF,UAAWC,KAAOC,MAClBtF,EACG,kBAAC0G,GAAD,CAAcC,SAAU/G,IAExB,kBAAC,GAAD,CACIC,YAAaA,EACbJ,aAAcA,SAftC,GAA6B2G,IAAM9B,WAuBpBC,iBA1GS,SAAA9H,GAAK,MAAK,CAC9BoD,YAAaI,GAAexD,GAC5BuD,MAAOE,GAASzD,MA0GhB4J,GAFW9B,CAGbuC,aAAWD,KClHPE,G,8MACF3G,aAAegG,IAAMY,Y,gNAGA7G,GAAQgE,KAAK/D,aCXlC,+FDWwDE,M,OAApD6D,KAAKhF,I,OACLgF,KAAKH,MAAM5E,WAAW+E,KAAKhF,K,qIAU3B,OACI,oCACI,yBAAKwB,MARC,CACVsG,SAAU,WACVC,OAAQ,MACRC,MAAO,QAKgBC,IAAKjD,KAAK/D,eAC7B,kBAACiH,GAAD,W,GAlBKjB,IAAMkB,eAwBZ/C,iBACX,SAAA9H,GAAK,MAAK,CAAEoD,YAAaI,GAAexD,MACxC,CAAE2C,cAFSmF,CAGbwC,I,yFErBWQ,GAAb,YACI,WAAYvD,GAAQ,IAAD,+BACf,8CAAMA,KAOVwD,YAAc,SAAA5I,GACVA,EAAE6I,iBADa,MAEyB,EAAKzD,MAArC/H,EAFO,EAEPA,aAAcD,EAFP,EAEOA,cAClBC,GACAD,KAVJ,EAAK0L,OAAS,EAAKA,OAAOC,KAAZ,iBACd,EAAKlL,MAAQ,CACTmL,QAAQ,GAJG,EADvB,wEAkBQzD,KAAKW,SAAS,CACV8C,QAASzD,KAAK1H,MAAMmL,WAnBhC,+BAuBc,IACE3L,EAAiBkI,KAAKH,MAAtB/H,aACR,OACI,6BACI,kBAAC4L,GAAA,EAAD,CAAQrC,MAAM,QAAQsC,OAAK,EAACC,OAAO,MAC/B,kBAACC,GAAA,EAAD,kBACA,kBAACC,GAAA,EAAD,CAAe/B,QAAS/B,KAAKuD,SAC7B,kBAACQ,GAAA,EAAD,CAAUN,OAAQzD,KAAK1H,MAAMmL,OAAQO,QAAM,GACvC,kBAACC,GAAA,EAAD,CAAKhD,UAAU,UAAU+C,QAAM,GAC3B,kBAACE,GAAA,EAAD,KACI,kBAAC,KAAD,CACIjD,UAAWC,KAAOiD,QAClBrH,GAAG,WAFP,mCAQJ,kBAACoH,GAAA,EAAD,KACI,kBAAC,KAAD,CACIjD,UAAWC,KAAOiD,QAClBrH,GAAG,YAFP,+CAQHhF,EACG,kBAACoM,GAAA,EAAD,KACI,kBAAC,KAAD,CACIjD,UAAWC,KAAOiD,QAClBrH,GAAG,UACHiF,QAAS/B,KAAKqD,aAHlB,mCAQJ,aA5DhC,GAA4BpB,IAAM9B,WAqEnBC,iBACX,SAAA9H,GAAK,MAAK,CAAER,aAAcO,EAAgBC,MAC1C,CAAET,iBAFSuI,CAGbuC,aAAWS,K,mnBCtEPgB,G,8MACF9L,MAAQ,CACJ+L,YAAa,CACTxD,KAAM,CACFyD,WAAW,EACXC,SAAS,GAEbC,KAAM,CACFF,WAAW,EACXC,SAAS,GAEbE,KAAM,CACFH,WAAW,EACXC,SAAS,GAEbG,IAAK,CACDJ,WAAW,EACXC,SAAS,IAGjB/D,OAAQ,CACJK,KAAM,GACN2D,KAAM,GACNC,KAAM,GACNC,IAAK,K,EAIbjE,aAAe,SAAAC,GAAU,IACbF,EAAW,EAAKlI,MAAhBkI,OACR,EAAKG,SAAS,CACVH,OAAO,MAAMA,EAAP,eAAgBE,EAAME,OAAOC,KAAOH,EAAME,OAAOE,W,EAI/DC,aAAe,WAAO,IAAD,EACiB,EAAKzI,MAAM+L,YAArCxD,EADS,EACTA,KAAM2D,EADG,EACHA,KAAMC,EADH,EACGA,KAAMC,EADT,EACSA,IAClBtK,EAAgB,EAAKyF,MAArBzF,YACR,OACqB,IAAjByG,EAAK0D,UACY,IAAjBC,EAAKD,UACY,IAAjBE,EAAKF,UACW,IAAhBG,EAAIH,SAEJ,EAAK1E,MAAM8E,QAAQC,KAAK,WACjBxK,EAAY,EAAK9B,MAAMkI,SAE3B,M,EAGXqE,WAAa,SAAAnE,GAKC,OAJFA,EAAME,OAAOE,MAEfgE,MACE,sZAGJ,EAAKnE,UAAS,SAAAoE,GAAS,MAAK,CACxBV,YAAY,MACLU,EAAUV,YADN,CAEPxD,KAAK,MACEkE,EAAUV,YAAYxD,KADzB,CAEA0D,SAAS,EACTD,WAAW,UAKvB,EAAK3D,UAAS,SAAAoE,GAAS,MAAK,CACxBV,YAAY,MACLU,EAAUV,YADN,CAEPxD,KAAK,MACEkE,EAAUV,YAAYxD,KADzB,CAEA0D,SAAS,EACTD,WAAW,W,EAO/BU,WAAa,SAAAtE,GACT,IAAIuE,EAAIvE,EAAME,OAAOE,MACM,OAAvBmE,EAAEH,MAAM,WACRpE,EAAME,OAAOE,MAAQmE,EAAI,IACY,OAA9BA,EAAEH,MAAM,kBACfpE,EAAME,OAAOE,MAAQmE,EAAI,IACmB,OAArCA,EAAEH,MAAM,2BACfpE,EAAME,OAAOE,MAAQmE,EAAI,KAGmB,OAA5CA,EAAEH,MAAM,gCACR,EAAKnE,UAAS,SAAAoE,GAAS,MAAK,CACxBV,YAAY,MACLU,EAAUV,YADN,CAEPG,KAAK,MACEO,EAAUV,YAAYG,KADzB,CAEAD,SAAS,EACTD,WAAW,UAKvB,EAAK3D,UAAS,SAAAoE,GAAS,MAAK,CACxBV,YAAY,MACLU,EAAUV,YADN,CAEPG,KAAK,MACEO,EAAUV,YAAYG,KADzB,CAEAD,SAAS,EACTD,WAAW,W,EAO/BY,WAAa,SAAAxE,GACT,IAAIuE,EAAIvE,EAAME,OAAOE,MACM,OAAvBmE,EAAEH,MAAM,aACRpE,EAAME,OAAOE,MAAQmE,EAAI,KAIK,OAA9BA,EAAEH,MAAM,mBACR,IAAMG,EAAEE,UAAU,EAAG,IACrB,GAAKF,EAAEE,UAAU,EAAG,IACpB,IAAMF,EAAEE,UAAU,EAAG,IACrB,GAAKF,EAAEE,UAAU,EAAG,GAEpB,EAAKxE,UAAS,SAAAoE,GAAS,MAAK,CACxBV,YAAY,MACLU,EAAUV,YADN,CAEPI,KAAK,MACEM,EAAUV,YAAYI,KADzB,CAEAF,SAAS,EACTD,WAAW,UAKvB,EAAK3D,UAAS,SAAAoE,GAAS,MAAK,CACxBV,YAAY,MACLU,EAAUV,YADN,CAEPI,KAAK,MACEM,EAAUV,YAAYI,KADzB,CAEAF,SAAS,EACTD,WAAW,W,EAO/Bc,UAAY,SAAA1E,GAEmB,OADnBA,EAAME,OAAOE,MACfgE,MAAM,WACR,EAAKnE,UAAS,SAAAoE,GAAS,MAAK,CACxBV,YAAY,MACLU,EAAUV,YADN,CAEPK,IAAI,MACGK,EAAUV,YAAYK,IAD1B,CAECH,SAAS,EACTD,WAAW,UAKvB,EAAK3D,UAAS,SAAAoE,GAAS,MAAK,CACxBV,YAAY,MACLU,EAAUV,YADN,CAEPK,IAAI,MACGK,EAAUV,YAAYK,IAD1B,CAECH,SAAS,EACTD,WAAW,W,0EAQ3B,IAAMxK,EAAOkG,KAAKH,MAAMxF,QACxB,OACI,yBAAK4G,UAAWC,KAAOC,MACnB,kBAACG,GAAA,EAAD,KACI,kBAACG,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAOC,IAAI,eAAX,+CACA,kBAACC,GAAA,EAAD,CACIzE,KAAK,OACL0D,KAAK,OACLpD,GAAG,cACH4H,aAAcvL,GAAQA,EAAK+G,KAAO/G,EAAK+G,KAAO,GAC9CyE,YAAY,uHACZzD,SAAU7B,KAAKS,aACf8E,QAASvF,KAAK6E,WACdW,QAASxF,KAAK1H,MAAM+L,YAAYxD,KAAKyD,UACrCmB,MAAOzF,KAAK1H,MAAM+L,YAAYxD,KAAK0D,UAEvC,kBAACmB,GAAA,EAAD,CAAcD,OAAK,IACnB,kBAACC,GAAA,EAAD,CAAcF,SAAO,GAArB,oPAIJ,kBAAC/D,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAOC,IAAI,eAAX,iEACA,kBAACC,GAAA,EAAD,CACIzE,KAAK,OACL0D,KAAK,OACLpD,GAAG,cACH4H,aAAcvL,GAAQA,EAAK0K,KAAO1K,EAAK0K,KAAO,GAC9Cc,YAAY,sBACZzD,SAAU7B,KAAKS,aACf8E,QAASvF,KAAKgF,WACdQ,QAASxF,KAAK1H,MAAM+L,YAAYG,KAAKF,UACrCmB,MAAOzF,KAAK1H,MAAM+L,YAAYG,KAAKD,UAEvC,kBAACmB,GAAA,EAAD,CAAcD,OAAK,IACnB,kBAACC,GAAA,EAAD,CAAcF,SAAO,GAArB,qJAIJ,kBAACG,GAAA,EAAD,CAAKjH,MAAI,GACL,kBAACkH,GAAA,EAAD,CAAKC,GAAI,GACL,kBAACpE,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAOC,IAAI,eAAX,6EACA,kBAACC,GAAA,EAAD,CACIzE,KAAK,OACL0D,KAAK,OACLpD,GAAG,cACH4H,aACIvL,GAAQA,EAAK2K,KAAO3K,EAAK2K,KAAO,GAEpCa,YAAY,kBACZzD,SAAU7B,KAAKS,aACf8E,QAASvF,KAAKkF,WACdM,QACIxF,KAAK1H,MAAM+L,YAAYI,KAAKH,UAEhCmB,MAAOzF,KAAK1H,MAAM+L,YAAYI,KAAKF,UAEvC,kBAACmB,GAAA,EAAD,CAAcD,OAAK,IACnB,kBAACC,GAAA,EAAD,CAAcF,SAAO,GAArB,wJAKR,kBAACI,GAAA,EAAD,CAAKC,GAAI,GACL,kBAACpE,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAOC,IAAI,cAAX,OACA,kBAACC,GAAA,EAAD,CACIzE,KAAK,OACL0D,KAAK,MACLpD,GAAG,aACH4H,aACIvL,GAAQA,EAAK4K,IAAM5K,EAAK4K,IAAM,GAElCY,YAAY,MACZzD,SAAU7B,KAAKS,aACf8E,QAASvF,KAAKoF,UACdI,QACIxF,KAAK1H,MAAM+L,YAAYK,IAAIJ,UAE/BmB,MAAOzF,KAAK1H,MAAM+L,YAAYK,IAAIH,UAEtC,kBAACmB,GAAA,EAAD,CAAcD,OAAK,IACnB,kBAACC,GAAA,EAAD,CAAcF,SAAO,GAArB,4JAMZ,kBAAC1D,GAAA,EAAD,CACIb,UAAWC,KAAOc,YAClBD,QAAS/B,KAAKe,cAFlB,iB,GA/QEkB,IAAM9B,WA2RbC,iBACX,SAAA9H,GAAK,MAAK,CAAE+B,QAASM,EAAWrC,MAChC,CAAE8B,eAFSgG,CAGbgE,ICvSIlF,GAAQC,KAEd2G,IAAS5F,OACL,kBAAC,KAAD,CAAUhB,MAAOA,IACb,mBCHO,kBACX,kBAAC,KAAD,KACI,kBAAC,GAAD,MACA,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAO6G,OAAK,EAACC,KAAK,SAASjG,UAAWQ,KACtC,kBAAC,GAAD,CAAewF,OAAK,EAACC,KAAK,UAAUjG,UAAW6C,KAC/C,kBAAC,GAAD,CAAemD,OAAK,EAACC,KAAK,WAAWjG,UAAWqE,KAChD,kBAAC,KAAD,CAAU4B,KAAK,IAAID,OAAK,EAACjJ,GAAG,eDJhC,OAEJmJ,SAASC,eAAe,U,mBEZ5BC,EAAOC,QAAU,CAAC,KAAO,uBAAuB,YAAc,gC,mBCA9DD,EAAOC,QAAU,CAAC,QAAU,0B,mBCA5BD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,YAAc,iC,mBCA/DD,EAAOC,QAAU,CAAC,KAAO,sBAAsB,YAAc,+B","file":"static/js/main.4effdca6.chunk.js","sourcesContent":["import { createAction } from \"redux-actions\";\n\nexport const authRequest = createAction(\"AUTH/REQUEST\");\nexport const authSuccess = createAction(\"AUTH/SUCCESS\");\nexport const authFailure = createAction(\"AUTH/FAILURE\");\n\nexport const logoutRequest = createAction(\"AUTH/LOGOUT\");\n","import { combineReducers } from \"redux\";\nimport { handleActions } from \"redux-actions\";\nimport {\n    authRequest,\n    authSuccess,\n    authFailure,\n    logoutRequest\n} from \"./actions\";\n\nconst isAuthorized = handleActions(\n    {\n        [authRequest]: () => false,\n        [authSuccess]: () => true,\n        [authFailure]: () => false,\n        [logoutRequest]: () => false\n    },\n    false\n);\n\nconst error = handleActions(\n    {\n        [authRequest]: () => null,\n        [authSuccess]: () => null,\n        [authFailure]: (_state, action) => action.payload\n    },\n    null\n);\n\nexport default combineReducers({ isAuthorized, error });\n\nexport const getIsAuthorized = state => state.auth.isAuthorized;\nexport const getError = state => state.auth.error;\n","export const authUser = (email, password) =>\n    fetch(\n        `https://loft-taxi.glitch.me/auth?username=${email}&password=${password}`\n    ).then(response => {\n        return response.status !== 200\n            ? Promise.reject(response)\n            : response.json();\n    });\n","import { authRequest, authSuccess, authFailure } from \"./actions\";\nimport { authUser } from \"./api.js\";\nimport { takeLatest, put, call } from \"redux-saga/effects\";\n\nfunction* fetchAuthWatcher(action) {\n    yield takeLatest(authRequest, fetchAuthFlow);\n}\n\nexport function* fetchAuthFlow(action) {\n    const { email, password } = action.payload;\n    try {\n        const result = yield call(authUser, email, password);\n        if (result.success) {\n            yield put(authSuccess());\n        } else {\n            yield put(authFailure(result.error));\n        }\n    } catch (er) {\n        console.log(er);\n    }\n}\n\nexport default fetchAuthWatcher;\n","export const load = localStorageKey => {\n    const stringData = window.localStorage.getItem(localStorageKey);\n    let data = null;\n    try {\n        data = JSON.parse(stringData);\n    } catch (e) {\n        data = null;\n    }\n    return data;\n};\n\nexport const save = (localStorageKey, data) => {\n    window.localStorage.setItem(localStorageKey, JSON.stringify(data));\n};\n","import { createAction } from \"redux-actions\";\n\nexport const profileSave = createAction(\"PROFILE/SAVE\");\n","import { handleActions } from \"redux-actions\";\nimport { load } from \"../../localStorage\";\nimport { profileSave } from \"./actions\";\n\nconst profile = handleActions(\n    {\n        [profileSave]: (_state, action) => {\n            if (!action.payload) return null;\n            return {\n                ..._state,\n                ...action.payload\n            };\n        }\n    },\n    load(\"profile\")\n);\n\nexport default profile;\n\nexport const getProfile = state => state.profile;\n","import { takeEvery, call, fork } from \"redux-saga/effects\";\nimport { save } from \"../../localStorage\";\nimport { profileSave } from \"./actions\";\n\nexport function* profileFlow(action) {\n    try {\n        yield call(save, \"profile\", action.payload);\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nfunction* profileWatcher() {\n    yield takeEvery(profileSave, profileFlow);\n}\n\nexport default function*() {\n    yield fork(profileWatcher);\n}\n","import { createAction } from \"redux-actions\";\n\nexport const mapRequest = createAction(\"MAP/REQUEST\");\nexport const mapSuccess = createAction(\"MAP/SUCCESS\");\nexport const mapFailure = createAction(\"MAP/FAILURE\");\n\nexport const addressListRequest = createAction(\"ADDRESS_LIST/REQUEST\");\nexport const addressListSuccess = createAction(\"ADDRESS_LIST/SUCCESS\");\nexport const addressListFailure = createAction(\"ADDRESS_LIST/FAILURE\");\n\nexport const routeRequest = createAction(\"ROUTE/REQUEST\");\nexport const routeSuccess = createAction(\"ROUTE/SUCCESS\");\nexport const routeFailure = createAction(\"ROUTE/FAILURE\");\n\nexport const newOrderRequest = createAction(\"NEW_ORDER/REQUEST\");\nexport const newOrderSuccess = createAction(\"NEW_ORDER/SUCCESS\");\nexport const newOrderFailure = createAction(\"NEW_ORDER/FAILURE\");\n","let map;\nconst layerId = \"route\";\n\nexport const mapInit = (mapContainer, apiKey, mapboxgl) => {\n    mapboxgl.accessToken = apiKey;\n    map = new mapboxgl.Map({\n        container: mapContainer.current,\n        style: \"mapbox://styles/mapbox/streets-v11\",\n        center: [30.35, 59.93],\n        zoom: 11.5\n    });\n    return map;\n};\n\nexport const fetchAddressList = () => {\n    return fetch(\"https://loft-taxi.glitch.me/addressList\").then(response => {\n        return response.status !== 200\n            ? Promise.reject(response)\n            : response.json();\n    });\n};\n\nexport const fetchRoute = ({ from, to }) => {\n    return fetch(\n        `https://loft-taxi.glitch.me/route?address1=${from}&address2=${to}`\n    ).then(response => {\n        return response.status !== 200\n            ? Promise.reject(response)\n            : response.json();\n    });\n};\n\nexport const drawRoute = route => {\n    if (map.getLayer(layerId)) {\n        map.getSource(layerId).setData({\n            type: \"FeatureCollection\",\n            features: [\n                {\n                    type: \"Feature\",\n                    properties: {},\n                    geometry: {\n                        type: \"LineString\",\n                        coordinates: route\n                    }\n                }\n            ]\n        });\n        return;\n    }\n\n    map.addLayer({\n        id: layerId,\n        type: \"line\",\n        source: {\n            type: \"geojson\",\n            data: {\n                type: \"Feature\",\n                properties: {},\n                geometry: {\n                    type: \"LineString\",\n                    coordinates: route\n                }\n            }\n        },\n        layout: {\n            \"line-join\": \"round\",\n            \"line-cap\": \"round\"\n        },\n        paint: {\n            \"line-color\": \"red\",\n            \"line-width\": 8\n        }\n    });\n};\n\nexport const flyTo = point => {\n    map.flyTo({\n        center: point,\n        zoom: 16,\n        bearing: 0,\n        speed: 0.9,\n        curve: 1\n    });\n};\n","import { combineReducers } from \"redux\";\nimport { handleActions } from \"redux-actions\";\nimport {\n    addressListSuccess,\n    routeRequest,\n    routeSuccess,\n    routeFailure,\n    newOrderRequest\n} from \"./actions\";\n\nconst addressList = handleActions(\n    {\n        [addressListSuccess]: (state, action) => action.payload.addresses\n    },\n    null\n);\n\nconst route = handleActions(\n    {\n        [routeRequest]: state => null,\n        [routeSuccess]: (state, action) => action.payload,\n        [routeFailure]: state => null,\n        [newOrderRequest]: state => null\n    },\n    null\n);\n\nconst order = handleActions(\n    {\n        [routeRequest]: state => false,\n        [routeSuccess]: state => true,\n        [routeFailure]: state => false,\n        [newOrderRequest]: state => false\n    },\n    false\n);\n\nexport const getAddressList = state => state.order.addressList;\nexport const getRoute = state => state.order.route;\nexport const getOrder = state => state.order.order;\n\nexport default combineReducers({\n    addressList,\n    route,\n    order\n});\n","import {\n    mapRequest,\n    mapFailure,\n    addressListRequest,\n    addressListSuccess,\n    addressListFailure,\n    routeRequest,\n    routeSuccess,\n    routeFailure\n} from \"./actions\";\nimport { fetchAddressList, fetchRoute, drawRoute, flyTo } from \"./api.js\";\nimport { takeLatest, put, call } from \"redux-saga/effects\";\n\nfunction* fetchMapWatcher(action) {\n    yield takeLatest(mapRequest, fetchMapFlow);\n    yield takeLatest(addressListRequest, fetchAddressListFlow);\n    yield takeLatest(routeRequest, fetchRouteFlow);\n    yield takeLatest(routeSuccess, fetchRouteSuccessFlow);\n}\n\nexport function* fetchMapFlow(action) {\n    const map = action.payload;\n\n    try {\n        if (map) {\n            yield put(addressListRequest());\n        } else throw new Error(map.error);\n    } catch (error) {\n        yield put(mapFailure(error.message));\n    }\n}\n\nexport function* fetchAddressListFlow(action) {\n    try {\n        const addresses = yield call(fetchAddressList);\n        if (addresses) yield put(addressListSuccess(addresses));\n    } catch (error) {\n        yield put(addressListFailure(error.message));\n    }\n}\n\nexport function* fetchRouteFlow(action) {\n    try {\n        const addresses = action.payload;\n        if (addresses) {\n            var route = yield call(fetchRoute, addresses);\n        }\n        if (route) {\n            yield put(routeSuccess(route));\n            yield call(drawRoute, route);\n        }\n    } catch (error) {\n        yield put(routeFailure(error.message));\n    }\n}\n\nexport function* fetchRouteSuccessFlow(action) {\n    try {\n        yield call(flyTo, action.payload[0]);\n    } catch (error) {\n        throw error;\n    }\n}\n\nexport default fetchMapWatcher;\n","import { combineReducers } from \"redux\";\nimport { fork } from \"redux-saga/effects\";\nimport auth, { sagas as authSagas } from \"./Auth\";\nimport profile, { sagas as profileSagas } from \"./Profile\";\nimport order, { sagas as orderSagas } from \"./Order\";\nimport { reducer as formReducer } from \"redux-form\";\n\nexport default combineReducers({ auth, profile, order, form: formReducer });\n\nexport function* rootSaga() {\n    yield fork(authSagas);\n    yield fork(profileSagas);\n    yield fork(orderSagas);\n}\n","import { createStore, compose, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootReducer, { rootSaga } from \"./modules\";\n\nconst createAppStore = () => {\n    const sagaMiddleware = createSagaMiddleware();\n\n    const store = createStore(\n        rootReducer,\n        compose(\n            applyMiddleware(sagaMiddleware),\n            window.__REDUX_DEVTOOLS_EXTENSION__\n                ? window.__REDUX_DEVTOOLS_EXTENSION__()\n                : f => f\n        )\n    );\n\n    sagaMiddleware.run(rootSaga);\n    return store;\n};\n\nexport default createAppStore;\n","import React, { Component } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getIsAuthorized } from \"../../modules/Auth\";\n\nclass PrivateRouter extends Component {\n    renderRoute = routeProps => {\n        const { isAuthorized, component: RouteComponent } = this.props;\n        return isAuthorized === true ? (\n            <RouteComponent {...routeProps} />\n        ) : (\n            <Redirect to=\"/\" />\n        );\n    };\n\n    render() {\n        const { component, ...rest } = this.props;\n        return <Route {...rest} render={this.renderRoute} />;\n    }\n}\n\nexport default connect(\n    state => ({ isAuthorized: getIsAuthorized(state) }),\n    null\n)(PrivateRouter);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { getIsAuthorized, authRequest, getError } from \"../../modules/Auth\";\nimport { Button, Form, FormGroup, Label, Input, Alert } from \"reactstrap\";\nimport styles from \"./LoginForm.module.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nconst MapStateToProps = state => ({\n    isAuthorized: getIsAuthorized(state),\n    authError: getError(state)\n});\n\nconst fields = [\n    {\n        id: \"email\",\n        label: \"Почта\",\n        type: \"text\"\n    },\n    {\n        id: \"password\",\n        label: \"Пароль\",\n        type: \"password\"\n    }\n];\n\nclass LoginForm extends React.Component {\n    state = {\n        values: {\n            email: \"\",\n            password: \"\"\n        }\n    };\n\n    handleChange = event => {\n        const { values } = this.state;\n        this.setState({\n            values: { ...values, [event.target.name]: event.target.value }\n        });\n    };\n\n    handleSubmit = () => {\n        const {\n            values: { email, password }\n        } = this.state;\n        const { authRequest } = this.props;\n        authRequest({ email, password });\n    };\n\n    render() {\n        const { isAuthorized, authError } = this.props;\n        const { values } = this.state;\n        if (isAuthorized) return <Redirect to=\"/mapBox\" />;\n        return (\n            <div className={styles.root}>\n                {authError !== null && (\n                    <Alert color=\"danger\">{authError}</Alert>\n                )}\n                <Form>\n                    {fields.map(({ id, label, type }) => (\n                        <React.Fragment key={id}>\n                            <FormGroup>\n                                <Label for={id}>{label}</Label>\n                                <Input\n                                    id={id}\n                                    type={type}\n                                    name={id}\n                                    value={values[id]}\n                                    onChange={this.handleChange}\n                                />\n                            </FormGroup>\n                        </React.Fragment>\n                    ))}\n                    <Button\n                        onClick={this.handleSubmit}\n                        className={styles.formElement}\n                    >\n                        Submit\n                    </Button>\n                </Form>\n                <div></div>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    MapStateToProps,\n    { authRequest }\n)(LoginForm);\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Button, Form, FormGroup, Input } from \"reactstrap\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport {\n    getAddressList,\n    getOrder,\n    routeRequest,\n    newOrderRequest\n} from \"../../modules/Order\";\nimport styles from \"./MapModal.module.css\";\n\nconst MapStateToProps = state => ({\n    addressList: getAddressList(state),\n    order: getOrder(state)\n});\n\nconst MapDispatchToProps = { getAddressList, routeRequest, newOrderRequest };\n\nclass FormTaxiRequest extends React.Component {\n    state = {\n        values: {\n            from: \"\",\n            to: \"\"\n        }\n    };\n\n    handleChange = event => {\n        const { values } = this.state;\n        this.setState({\n            values: {\n                ...values,\n                [event.target.name]: this.props.addressList[\n                    event.target.selectedIndex\n                ]\n            }\n        });\n    };\n\n    render() {\n        const fields = [\"from\", \"to\"];\n        const { addressList, routeRequest } = this.props;\n        const { values } = this.state;\n        // const enabled = \"false\";\n        return (\n            <div>\n                <Form>\n                    {fields.map(id => (\n                        <React.Fragment key={id}>\n                            <FormGroup>\n                                <Input\n                                    onClick={this.handleChange}\n                                    type=\"select\"\n                                    name={id}\n                                >\n                                    {addressList &&\n                                        addressList.map((item, index) => (\n                                            <React.Fragment key={index}>\n                                                <option>{item}</option>\n                                            </React.Fragment>\n                                        ))}\n                                </Input>\n                            </FormGroup>\n                        </React.Fragment>\n                    ))}\n                </Form>\n                <Button\n                    onClick={() => {\n                        routeRequest(values);\n                    }}\n                    className={styles.formElement}\n                >\n                    Вызвать Такси\n                </Button>\n            </div>\n        );\n    }\n}\n\nfunction FormNewOrder(props) {\n    const { onSubmit } = props;\n    return (\n        <div data-testid=\"formNewOrder\">\n            <h3>Заказ размещён</h3>\n            <p>\n                Ваше такси уже едет к вам. Прибудет приблизительно через 10\n                минут.\n            </p>\n            <Button onClick={onSubmit} className={styles.formElement}>\n                Сделать новый заказ\n            </Button>\n        </div>\n    );\n}\n\nexport class MapForm extends React.Component {\n    render() {\n        const {\n            order,\n            addressList,\n            routeRequest,\n            newOrderRequest\n        } = this.props;\n        return (\n            <div className={styles.root}>\n                {order ? (\n                    <FormNewOrder onSubmit={newOrderRequest}></FormNewOrder>\n                ) : (\n                    <FormTaxiRequest\n                        addressList={addressList}\n                        routeRequest={routeRequest}\n                    ></FormTaxiRequest>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    MapStateToProps,\n    MapDispatchToProps\n)(withRouter(MapForm));\n","import React from \"react\";\nimport mapboxgl from \"mapbox-gl\";\nimport { apiKey } from \"../../modules/Order/ApiKey.js\";\nimport { mapInit } from \"../../modules/Order/api.js\";\nimport MapModal from \"../MapModal\";\nimport { connect } from \"react-redux\";\nimport { getAddressList, mapRequest } from \"../../modules/Order\";\n\nclass MapBox extends React.PureComponent {\n    mapContainer = React.createRef();\n\n    async componentDidMount() {\n        this.map = await mapInit(this.mapContainer, apiKey, mapboxgl);\n        this.props.mapRequest(this.map);\n    }\n\n    render() {\n        const style = {\n            position: \"absolute\",\n            height: \"96%\",\n            width: \"100%\"\n        };\n\n        return (\n            <>\n                <div style={style} ref={this.mapContainer} />\n                <MapModal />\n            </>\n        );\n    }\n}\n\nexport default connect(\n    state => ({ addressList: getAddressList(state) }),\n    { mapRequest }\n)(MapBox);\n","export const apiKey =\n    \"pk.eyJ1Ijoic2hpa2VsZXNzIiwiYSI6ImNrMGd5NG1rMjBibXYzbm5xOGF6cG12NWsifQ.KGIE9q2V4dOgu8q6HNVWvA\";\n","import React from \"react\";\nimport { NavLink, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getIsAuthorized, logoutRequest } from \"../../modules/Auth\";\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem\n} from \"reactstrap\";\nimport styles from \"./Header.module.css\";\n\nexport class Header extends React.Component {\n    constructor(props) {\n        super(props);\n        this.toggle = this.toggle.bind(this);\n        this.state = {\n            isOpen: false\n        };\n    }\n\n    handleClick = e => {\n        e.preventDefault();\n        const { isAuthorized, logoutRequest } = this.props;\n        if (isAuthorized) {\n            logoutRequest();\n        }\n    };\n\n    toggle() {\n        this.setState({\n            isOpen: !this.state.isOpen\n        });\n    }\n\n    render() {\n        const { isAuthorized } = this.props;\n        return (\n            <div>\n                <Navbar color=\"light\" light expand=\"md\">\n                    <NavbarBrand>Loft-Taxi</NavbarBrand>\n                    <NavbarToggler onClick={this.toggle} />\n                    <Collapse isOpen={this.state.isOpen} navbar>\n                        <Nav className=\"ml-auto\" navbar>\n                            <NavItem>\n                                <NavLink\n                                    className={styles.navLink}\n                                    to=\"/mapBox\"\n                                >\n                                    Карта\n                                </NavLink>\n                            </NavItem>\n\n                            <NavItem>\n                                <NavLink\n                                    className={styles.navLink}\n                                    to=\"/profile\"\n                                >\n                                    Профиль\n                                </NavLink>\n                            </NavItem>\n\n                            {isAuthorized ? (\n                                <NavItem>\n                                    <NavLink\n                                        className={styles.navLink}\n                                        to=\"/logout\"\n                                        onClick={this.handleClick}\n                                    >\n                                        Выйти\n                                    </NavLink>\n                                </NavItem>\n                            ) : null}\n                        </Nav>\n                    </Collapse>\n                </Navbar>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    state => ({ isAuthorized: getIsAuthorized(state) }),\n    { logoutRequest }\n)(withRouter(Header));\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n    Button,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    FormFeedback,\n    Col,\n    Row\n} from \"reactstrap\";\nimport styles from \"./Profile.module.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { getProfile, profileSave } from \"../../modules/Profile\";\n\nclass Profile extends React.Component {\n    state = {\n        validations: {\n            name: {\n                isInvalid: false,\n                isValid: false\n            },\n            card: {\n                isInvalid: false,\n                isValid: false\n            },\n            date: {\n                isInvalid: false,\n                isValid: false\n            },\n            cvv: {\n                isInvalid: false,\n                isValid: false\n            }\n        },\n        values: {\n            name: \"\",\n            card: \"\",\n            date: \"\",\n            cvv: \"\"\n        }\n    };\n\n    handleChange = event => {\n        const { values } = this.state;\n        this.setState({\n            values: { ...values, [event.target.name]: event.target.value }\n        });\n    };\n\n    handleSubmit = () => {\n        const { name, card, date, cvv } = this.state.validations;\n        const { profileSave } = this.props;\n        if (\n            name.isValid === true &&\n            card.isValid === true &&\n            date.isValid === true &&\n            cvv.isValid === true\n        ) {\n            this.props.history.push(\"/mapBox\");\n            return profileSave(this.state.values);\n        }\n        return null;\n    };\n\n    verifyName = event => {\n        var v = event.target.value;\n        if (\n            v.match(\n                /^[аАбБвВгГдДеЕёЁжЖзЗиИйЙкКлЛмМнНоОпПрРсСтТуУфФхХцЦчЧшШщЩъЪыЫьЬэЭюЮяЯ ]+$/\n            ) !== null\n        ) {\n            this.setState(prevState => ({\n                validations: {\n                    ...prevState.validations,\n                    name: {\n                        ...prevState.validations.name,\n                        isValid: true,\n                        isInvalid: false\n                    }\n                }\n            }));\n        } else {\n            this.setState(prevState => ({\n                validations: {\n                    ...prevState.validations,\n                    name: {\n                        ...prevState.validations.name,\n                        isValid: false,\n                        isInvalid: true\n                    }\n                }\n            }));\n        }\n    };\n\n    verifyCard = event => {\n        var v = event.target.value;\n        if (v.match(/^\\d{4}$/) !== null) {\n            event.target.value = v + \" \";\n        } else if (v.match(/^\\d{4}\\ \\d{4}$/) !== null) {\n            event.target.value = v + \" \";\n        } else if (v.match(/^\\d{4}\\ \\d{4}\\ \\d{4}$/) !== null) {\n            event.target.value = v + \" \";\n        }\n\n        if (v.match(/^\\d{4}\\ \\d{4}\\ \\d{4}\\ \\d{4}$/) !== null) {\n            this.setState(prevState => ({\n                validations: {\n                    ...prevState.validations,\n                    card: {\n                        ...prevState.validations.card,\n                        isValid: true,\n                        isInvalid: false\n                    }\n                }\n            }));\n        } else {\n            this.setState(prevState => ({\n                validations: {\n                    ...prevState.validations,\n                    card: {\n                        ...prevState.validations.card,\n                        isValid: false,\n                        isInvalid: true\n                    }\n                }\n            }));\n        }\n    };\n\n    verifyDate = event => {\n        var v = event.target.value;\n        if (v.match(/^\\d{2}$/) !== null) {\n            event.target.value = v + \"/\";\n        }\n\n        if (\n            v.match(/^\\d{2}\\/\\d{2}$/) !== null &&\n            12 >= v.substring(0, 2) &&\n            1 <= v.substring(0, 2) &&\n            99 >= v.substring(3, 5) &&\n            1 <= v.substring(3, 5)\n        ) {\n            this.setState(prevState => ({\n                validations: {\n                    ...prevState.validations,\n                    date: {\n                        ...prevState.validations.date,\n                        isValid: true,\n                        isInvalid: false\n                    }\n                }\n            }));\n        } else {\n            this.setState(prevState => ({\n                validations: {\n                    ...prevState.validations,\n                    date: {\n                        ...prevState.validations.date,\n                        isValid: false,\n                        isInvalid: true\n                    }\n                }\n            }));\n        }\n    };\n\n    verifyCVV = event => {\n        var v = event.target.value;\n        if (v.match(/^\\d{3}$/) !== null) {\n            this.setState(prevState => ({\n                validations: {\n                    ...prevState.validations,\n                    cvv: {\n                        ...prevState.validations.cvv,\n                        isValid: true,\n                        isInvalid: false\n                    }\n                }\n            }));\n        } else {\n            this.setState(prevState => ({\n                validations: {\n                    ...prevState.validations,\n                    cvv: {\n                        ...prevState.validations.cvv,\n                        isValid: false,\n                        isInvalid: true\n                    }\n                }\n            }));\n        }\n    };\n\n    render() {\n        const data = this.props.profile;\n        return (\n            <div className={styles.root}>\n                <Form>\n                    <FormGroup>\n                        <Label for=\"profileName\">Ваше имя</Label>\n                        <Input\n                            type=\"text\"\n                            name=\"name\"\n                            id=\"profileName\"\n                            defaultValue={data && data.name ? data.name : \"\"}\n                            placeholder=\"Сидоров Иван Петрович\"\n                            onChange={this.handleChange}\n                            onKeyUp={this.verifyName}\n                            invalid={this.state.validations.name.isInvalid}\n                            valid={this.state.validations.name.isValid}\n                        />\n                        <FormFeedback valid></FormFeedback>\n                        <FormFeedback invalid>\n                            Поле должно содержать только буквы кириллицы\n                        </FormFeedback>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"profileCard\">Номер Карты</Label>\n                        <Input\n                            type=\"text\"\n                            name=\"card\"\n                            id=\"profileCard\"\n                            defaultValue={data && data.card ? data.card : \"\"}\n                            placeholder=\"1234 1234 1234 1234\"\n                            onChange={this.handleChange}\n                            onKeyUp={this.verifyCard}\n                            invalid={this.state.validations.card.isInvalid}\n                            valid={this.state.validations.card.isValid}\n                        />\n                        <FormFeedback valid></FormFeedback>\n                        <FormFeedback invalid>\n                            Поле должно содержать 16 цифр\n                        </FormFeedback>\n                    </FormGroup>\n                    <Row form>\n                        <Col md={6}>\n                            <FormGroup>\n                                <Label for=\"profileDate\">Срок действия</Label>\n                                <Input\n                                    type=\"text\"\n                                    name=\"date\"\n                                    id=\"profileDate\"\n                                    defaultValue={\n                                        data && data.date ? data.date : \"\"\n                                    }\n                                    placeholder=\"MM/ГГ\"\n                                    onChange={this.handleChange}\n                                    onKeyUp={this.verifyDate}\n                                    invalid={\n                                        this.state.validations.date.isInvalid\n                                    }\n                                    valid={this.state.validations.date.isValid}\n                                />\n                                <FormFeedback valid></FormFeedback>\n                                <FormFeedback invalid>\n                                    Поле заполнено некорректно\n                                </FormFeedback>\n                            </FormGroup>\n                        </Col>\n                        <Col md={6}>\n                            <FormGroup>\n                                <Label for=\"profileCVV\">CVV</Label>\n                                <Input\n                                    type=\"text\"\n                                    name=\"cvv\"\n                                    id=\"profileCVV\"\n                                    defaultValue={\n                                        data && data.cvv ? data.cvv : \"\"\n                                    }\n                                    placeholder=\"123\"\n                                    onChange={this.handleChange}\n                                    onKeyUp={this.verifyCVV}\n                                    invalid={\n                                        this.state.validations.cvv.isInvalid\n                                    }\n                                    valid={this.state.validations.cvv.isValid}\n                                />\n                                <FormFeedback valid></FormFeedback>\n                                <FormFeedback invalid>\n                                    Поле должно содержать 3 цифры\n                                </FormFeedback>\n                            </FormGroup>\n                        </Col>\n                    </Row>\n                    <Button\n                        className={styles.formElement}\n                        onClick={this.handleSubmit}\n                    >\n                        Sign in\n                    </Button>\n                </Form>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    state => ({ profile: getProfile(state) }),\n    { profileSave }\n)(Profile);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport createStore from \"./store\";\nimport { Provider } from \"react-redux\";\nimport RootRouter from \"./components/RootRouter/RootRouter\";\n\nconst store = createStore();\n\nReactDOM.render(\n    <Provider store={store}>\n        <RootRouter />\n    </Provider>,\n    document.getElementById(\"root\")\n);\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport PrivateRouter from \"../PrivateRouter\";\nimport LoginForm from \"../LoginForm\";\nimport MapBox from \"../MapBox\";\nimport Header from \"../Header\";\nimport Profile from \"../Profile\";\n\nexport default () => (\n    <BrowserRouter>\n        <Header />\n        <Switch>\n            <Route exact path=\"/login\" component={LoginForm} />\n            <PrivateRouter exact path=\"/mapBox\" component={MapBox} />\n            <PrivateRouter exact path=\"/profile\" component={Profile} />\n            <Redirect path=\"/\" exact to=\"/login\" />\n        </Switch>\n    </BrowserRouter>\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"MapModal_root__1626x\",\"formElement\":\"MapModal_formElement__23XjA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navLink\":\"Header_navLink__Sd-O5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"LoginForm_root__1grHZ\",\"formElement\":\"LoginForm_formElement__bFYcG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Profile_root__1jgjB\",\"formElement\":\"Profile_formElement__2FWtZ\"};"],"sourceRoot":""}